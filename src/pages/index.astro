---
import { getCollection } from "astro:content";

import BaseLayout from "../layouts/BaseLayout.astro";
import FormattedDate from "../components/FormattedDate.astro";
import readingTime from "reading-time";

const posts = (await getCollection("ideas"))
  .filter((post) => {
    // In development, show all posts including drafts
    // In production, only show published posts (not drafts)
    return import.meta.env.DEV || !post.data.draft;
  })
  .sort((a, b) => {
    const aDate = a.data.pubDate || a.data.date;
    const bDate = b.data.pubDate || b.data.date;
    return new Date(bDate || 0).valueOf() - new Date(aDate || 0).valueOf();
  });
// .slice(0, 10); // 10 posts

const allTags = [
  ...new Set(posts.flatMap((post) => post.data.tags || [])),
].sort((a, b) => a.localeCompare(b));
const allTypes = [
  ...new Set(posts.map((post) => post.data.type).filter(Boolean)),
];
const allStatuses = [
  ...new Set(posts.map((post) => post.data.status).filter(Boolean)),
];

const allPostsData = posts.map((post) => {
  const slug = post.id.replace(/(\/index)?\.(md|mdx)$/, "");
  const stats = readingTime(post.body || "");
  return {
    id: post.id,
    slug: slug,
    title: post.data.title,
    description: post.data.description,
    date: post.data.date,
    updated: post.data.updated,
    type: post.data.type,
    status: post.data.status,
    tags: post.data.tags || [],
    image: post.data.image,
    draft: post.data.draft,
    readingTimeText: stats.text,
  };
});
---

<BaseLayout title="Home">
  <section class="heading">
    <h1 class="animated-heading">
      <span class="word">Hi,</span>
      <span class="word">I'm</span>
      <span class="word">Tyler</span>
    </h1>
    <p class="animated-subtitle slide-in-block">
      I'm a software engineer with a passion for building things.<br />
      I'm currently studying machine learning and systems at Georgia Tech. My research interests include: Mechanistic Interpretability, AI Alignment, Deep Learning Theory
    </p>
  </section>
  <section class="posts slide-in-block" data-pagefind-ignore>
    <h2>Writing</h2>
    <ul>
      {
        allPostsData.map((post) => (
          <li>
            <a href={`/ideas/${post.slug}/`}>
              {post.date && <FormattedDate date={post.date} />} -
              {post.draft && <span class="draft-indicator">DRAFT</span>}
              <span class="title">{post.title}</span>
              <span class="reading-time">{post.readingTimeText}</span>
              <div class="description">{post.description}</div>
            </a>
          </li>
        ))
      }
    </ul>
  </section>
</BaseLayout>

<style>
  .heading {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 40vh;
    min-height: 200px;
    text-align: center;
  }

  .heading h1 {
    font-size: 5rem;
  }

  .animated-heading,
  .animated-subtitle {
    overflow: hidden;
  }

  .animated-subtitle {
    max-width: 600px;
  }

  .word {
    display: inline-block;
    opacity: 0;
    transform: translateY(100%) translateZ(0);
    filter: blur(20px);
    animation: wordSlideIn 0.4s cubic-bezier(0.43, 0.195, 0.02, 1) forwards;
  }

  .animated-heading .word {
    animation-delay: calc(var(--word-index, 0) * 0.05s);
  }

  .animated-subtitle .word {
    animation-delay: calc(0.15s + var(--word-index, 0) * 0.05s);
  }

  @keyframes wordSlideIn {
    to {
      opacity: 1;
      transform: translateY(0) translateZ(0);
      filter: blur(0px);
    }
  }

  /* Set CSS custom properties for animation delays */
  .animated-heading .word:nth-child(1) {
    --word-index: 0;
  }
  .animated-heading .word:nth-child(2) {
    --word-index: 1;
  }
  .animated-heading .word:nth-child(3) {
    --word-index: 2;
  }

  .posts {
    max-width: 800px;
    margin: 0 auto;
  }

  .posts ul {
    padding: 0;
  }

  .posts li {
    list-style: none;
    font-size: 1rem;
    padding: 0.5rem 0;
  }

  .posts a {
    text-decoration: none;
    color: var(--sol-8);
  }

  .posts a:hover {
    color: var(--sol-9);
    text-decoration: underline;
  }

  .posts a .title {
    font-weight: bold;
    font-family: var(--font-heading);
  }

  .draft-indicator {
    background-color: var(--sol-yellow);
    color: var(--green);
    font-size: 0.7rem;
    font-weight: bold;
    padding: 2px 6px;
    border-radius: 3px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .slide-in-block {
    opacity: 0;
    filter: blur(10px);
    transform: scale(0.95);
    will-change: transform, opacity, filter;
    animation: slideInBlock 0.4s cubic-bezier(0.43, 0.195, 0.02, 1) forwards;
  }

  .animated-subtitle.slide-in-block {
    animation-delay: 0.4s;
  }

  .posts.slide-in-block {
    animation-delay: 0.6s;
  }

  @keyframes slideInBlock {
    to {
      opacity: 1;
      filter: blur(0px);
      transform: scale(1);
    }
  }
</style>
