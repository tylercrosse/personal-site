---
import { type CollectionEntry, getCollection } from "astro:content";
import BlogPost from "../../layouts/BlogPost.astro";
import { render } from "astro:content";
import type { MarkdownHeading } from "astro";
import readingTime from "reading-time";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  
  const headings = await Promise.all(
    posts.map(async (post) => {
      const data = await render(post);
      return data.headings;
    })
  );

  return posts.map((post, index) => {
    const stats = readingTime(post.body || "");
    return {
      params: { slug: post.id },
      props: { post, headings: headings[index], readingTimeText: stats.text },
    };
  });
}

type Props = {
  post: CollectionEntry<"blog">;
  headings: MarkdownHeading[];
  readingTimeText: string;
};

const { post, headings, readingTimeText } = Astro.props;
const { Content } = await render(post);
---

<BlogPost {...post.data} headings={headings} readingTimeText={readingTimeText}>
  <Content />
</BlogPost>
