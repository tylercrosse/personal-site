---
import HeaderLink from "./HeaderLink.astro";
import ThemeToggle from "./ThemeToggle.astro";
import Omnibar from "./Omnibar.astro";
import { SITE_TITLE } from "../consts";
---

<header class="fixed inset-x-0 top-0 z-50 border-b border-border-light bg-surface-light/95 shadow-soft backdrop-blur transition-colors duration-300 dark:border-border-dark dark:bg-surface-dark/95">
  <nav class="mx-auto flex max-w-screen-xl items-center justify-between gap-3 px-4 py-3 sm:px-6">
    <a
      href="/"
      class="inline-flex h-11 w-11 items-center justify-center rounded-full border border-border-light bg-white/90 text-accent shadow-sm transition hover:shadow dark:border-border-dark dark:bg-surface-dark/80"
    >
      <img class="h-7 w-7" src="/img/favicons/favicon-96x96.png" alt="Logo" />
    </a>
    <div class="flex flex-1 flex-wrap items-center justify-end gap-2 text-sm sm:flex-nowrap sm:gap-3">
      <HeaderLink href="/">Home</HeaderLink>
      <HeaderLink href="/ideas">Ideas</HeaderLink>
      <HeaderLink href="/about">About</HeaderLink>
      <div
        class="js-missing inline-flex items-center gap-2 rounded-md border border-amber-200 bg-amber-50 px-3 py-1 text-xs font-semibold text-amber-600 shadow-sm dark:border-amber-300/40 dark:bg-amber-500/10 dark:text-amber-200"
        title="Search and other important features require JavaScript"
      >
        ⚠️ JavaScript Disabled
      </div>
      <div class="search-wrapper js-required hidden items-center sm:flex">
        <Omnibar />
      </div>
      <div class="theme-toggle-wrapper ml-1 flex items-center">
        <ThemeToggle />
      </div>
    </div>
  </nav>
</header>

<script>
  function initHeadroom() {
    const header = document.querySelector("header");
    if (!header) return;

    let lastScrollY = window.scrollY;
    const tolerance = { up: 5, down: 5 };
    let lastDirection = "up";
    const offset = 0;

    function update() {
      const currentScrollY = window.scrollY;
      const direction = currentScrollY > lastScrollY ? "down" : "up";
      const toleranceExceeded =
        Math.abs(currentScrollY - lastScrollY) >=
        (direction === "down" ? tolerance.down : tolerance.up);

      if (toleranceExceeded && header) {
        if (direction === "down" && currentScrollY > offset) {
          header.classList.add("headroom--unpinned");
          header.classList.remove("headroom--pinned");
        } else if (direction === "up") {
          header.classList.add("headroom--pinned");
          header.classList.remove("headroom--unpinned");
        }
        lastDirection = direction;
      }

      lastScrollY = currentScrollY;
    }

    window.addEventListener("scroll", update, { passive: true });
  }

  // Initialize when DOM is loaded
  document.addEventListener("DOMContentLoaded", initHeadroom);
</script>
